{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","food","className","style","recipe","src","alt","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","respone","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","ingredientLines","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6QAqBeA,EAjBA,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,YAAuB,EAAVC,KAClD,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAMP,IACN,qBAAKK,UAAWC,IAAMJ,MAAMM,IAAKN,EAAOO,IAAI,KAC5C,6BACKN,EAAYO,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,4BAAIX,Q,MC6DDY,MArEf,WAEE,IAFa,EAKiBC,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAMgBF,mBAAS,IANzB,mBAMNG,EANM,KAMGC,EANH,OAOaJ,mBAAS,UAPtB,mBAONK,EAPM,KAOCC,EAPD,KASbC,qBAAW,WACTC,MACA,CAACH,IASL,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,mCAAD,OAAoCL,EAApC,mBAnBX,WAmBW,oBAlBV,qCAiBC,cACXM,EADW,gBAEEA,EAAQC,OAFV,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAkBd,OACE,sBAAKvB,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,6CAEF,uBAAO0B,SAXK,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAQqBb,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,MAAOlB,EAAQmB,SAjB5C,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAiBb,wBAAQ9B,UAAU,gBAAgB6B,KAAO,SAAzC,uBAEF,qBAAK7B,UAAU,MAAf,SACA,sDAAyBc,EAAzB,SAGA,qBAAKd,UAAU,MAAf,SAECU,EAAQL,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CAEAP,MAAOO,EAAOA,OAAO+B,MACrBrC,SAAUM,EAAOA,OAAON,SACxBC,MAAOK,EAAOA,OAAOL,MACrBC,YAAaI,EAAOA,OAAOJ,YAC3BC,KAAMG,EAAOA,OAAOgC,iBALfhC,EAAOA,OAAO+B,gBCjDZE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,yB","file":"static/js/main.4c00ebe5.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n\r\n\r\nconst Recipe = ({title, calories, image, ingredients, food}) => {\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1 >{title}</h1>\r\n            <img className={style.image}src={image} alt=\"\"></img>\r\n            <ol>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n            <p>{calories}</p>\r\n           \r\n             {/* <p className={style.para}>{food}</p>  */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","\nimport { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\n\nfunction App() {\n\n  const APP_ID = '2adf7481';\n  const APP_KEY = '0b03c5116947f05dd8d12b93d1e6c26e';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search , setSearch] = useState(\"\");\n  const [query, setQuery] = useState('banana');\n\n  useEffect( () => {\n    getRecipes();\n  },[query]);\n\n// const getRecipes = async () => {\n//   const response = await fetch(`https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`);\n//   const data = await response.json;\n//   console.log(data);\n  \n\n// }\nconst getRecipes = async () => {\n  const respone =await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n  const data = await respone.json();\n  setRecipes(data.hits);\n  console.log(data.hits);\n};\n\nconst updateSearch = e => {\n  setSearch(e.target.value);\n  \n}\n\nconst getSearch = e => {\n  e.preventDefault();\n  setQuery(search);\n  setSearch(\"\");\n}\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Meal Time</h1>\n      </div>\n      <form  onSubmit={getSearch}className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\n        <button className=\"search-button\" type = \"submit\">Search</button>\n      </form>\n      <div className=\"msg\">\n      <h3>Search Results for \"{query}\"</h3>\n      </div>\n      \n      <div className=\"rec\">\n\n      {recipes.map(recipe => (\n        <Recipe \n        key={recipe.recipe.label}\n        title={recipe.recipe.label}\n        calories={recipe.recipe.calories} \n        image={recipe.recipe.image} \n        ingredients={recipe.recipe.ingredients}\n        food={recipe.recipe.ingredientLines} />\n        \n      ))}\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3Ndmn\",\"para\":\"recipe_para__2sUQw\",\"image\":\"recipe_image__9samz\"};"],"sourceRoot":""}